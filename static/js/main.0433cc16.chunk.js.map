{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","Components/Form/Form.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/ContactsList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","console","log","phoneBookActions","type","contacts","createReducer","state","find","alert","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBook","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","Form","nameInputId","numberInputId","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","label","input","placeholder","onChange","button","Component","connect","dispatch","normalizedFilter","toLowerCase","includes","onDelete","list","map","item","btn","onClick","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0433cc16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1BYsA\",\"label\":\"Filter_label__3Elod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-logo\":\"App_App-logo__3rp6I\",\"App-logo-spin\":\"App_App-logo-spin__kGMlH\",\"App-header\":\"App_App-header__wIHk4\",\"App-link\":\"App_App-link__2diAd\",\"App\":\"App_App__1gd9O\",\"input\":\"App_input__3yIei\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filterContact = createAction('contacts/filter');\n\nexport default { addContact, deleteContact, filterContact };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport phoneBookActions from './phoneBook-actions';\n// import actionTypes from './phoneBook-types';\n\nconsole.log(phoneBookActions.addContact.type);\n\n// редюсер на тулкит\nconst contacts = createReducer([], {\n  // добавление\n  [phoneBookActions.addContact]: (state, { payload }) =>\n    state.find(\n      ({ name, number }) => name === payload.name || number === payload.number,\n    )\n      ? alert('This subscriber is already in contacts')\n      : [...state, payload],\n\n  // удаление\n  [phoneBookActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// фильтр\nconst filter = createReducer('', {\n  [phoneBookActions.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: persistReducer(contactsPersistConfig, phoneBookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport shortid from 'shortid';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  // ф-ция воода данных в любой инпут по атрибуту name\n  handleChange = event => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  // ф-ция сабмит на форме\n  handleSubmit = event => {\n    const { name, number } = this.state;\n    event.preventDefault();\n    if (!name || !number) {\n      alert('Enter name and phone number!');\n      return;\n    }\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  // очистка формы после сабмита\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, nameInputId, handleChange, numberInputId } = this;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId} className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n            id={nameInputId}\n          />\n        </label>\n        <label htmlFor={numberInputId} className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            className={s.input}\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleChange}\n            id={numberInputId}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\n// state здесь не нужен, поэтому mapStateToProps не используем\n// используем только mapDispatchToProps\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(phoneBookActions.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts = [], onDelete }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.name}>{name}:</span>{' '}\n          <span className={s.number}>{number}</span>\n          <button className={s.btn} onClick={() => onDelete(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { contacts, filter } = state.phoneBook;\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n  return {\n    contacts: filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(phoneBookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filter}>\n      <label htmlFor=\"\" className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search\"\n          className={s.input}\n          value={filter}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.phoneBook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(phoneBookActions.filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\n\n// import shortid from 'shortid';\nimport s from './App.module.css';\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={s.App}>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        {' '}\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3rZrk\",\"label\":\"Form_label__2NJMu\",\"input\":\"Form_input__gEI87\",\"button\":\"Form_button__3l9Cg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2_ISM\",\"item\":\"ContactsList_item__37Prn\",\"name\":\"ContactsList_name__zyI8c\",\"btn\":\"ContactsList_btn__3Sy7Q\"};"],"sourceRoot":""}